if (pm.response.code == "200") // Главное условие. Если провалится Test_1, то нет смысла выполнять Test_2 и Test_3
  {pm.test("Test_1", function () {pm.response.to.have.status(200);});
  pm.collectionVariables.set("Test_1_Результат", "Pass"); pm.collectionVariables.set("Test_1_Коммент", "Успех"); // Создание переменных в коллекцию, для отправки результата

  var jsonDate = pm.response.json(); // распарсить ответ запроса для Test_2 и Test_3

  pm.test("Test_2", function () {pm.expect(jsonDate.name).to.eql("Тестовый цикл");})
    if (jsonDate.name == "Тестовый цикл")
    {pm.collectionVariables.set("Test_2_Результат", "Pass"); pm.collectionVariables.set("Test_2_Коммент", "Успех");}
    else {pm.collectionVariables.set("Test_2_Результат", "Fail"); pm.collectionVariables.set("Test_2_Коммент", "Получаем имя " + jsonDate.name);}

  pm.test("Test_3", function () {pm.expect(jsonDate.key).to.eql("TT-C39");})
    if (jsonDate.key == "TT-C39")
    {pm.collectionVariables.set("Test_3_Результат", "Pass"); pm.collectionVariables.set("Test_3_Коммент", "Успех");}
    else {pm.collectionVariables.set("Test_3_Результат", "Fail"); pm.collectionVariables.set("Test_3_Коммент", "Получаем код " + jsonDate.key);}
  }
else
  {pm.test("Test_1", function () {pm.response.to.have.status(200);});
  pm.collectionVariables.set("Test_1_Результат", "Fail"); pm.collectionVariables.set("Test_1_Коммент", "Статус код " + pm.response.code);
  pm.collectionVariables.set("Test_2_Результат", "Blocked"); 
  pm.collectionVariables.set("Test_3_Результат", "Blocked");}

if (pm.collectionVariables.get("Test_1_Результат") == "Fail" || pm.collectionVariables.get("Test_2_Результат") == "Fail" || pm.collectionVariables.get("Test_3_Результат") == "Fail") // Если хоть один из тестов провалился, то тест-кейс считается провальным
{pm.collectionVariables.set("Test_Результат", "Fail");}
else {pm.collectionVariables.set("Test_Результат", "Pass");}

pm.sendRequest({  // Подзапрос для отправки результатов в Zephyr
           url: 'https://……..…./rest/atm/1.0/testrun/TT-C39/testresults',
           method: 'POST',
           header: {'Content-Type': 'application/json'},
            body: {
                mode: 'raw',
                raw: JSON.stringify([{
        "status":pm.collectionVariables.get("Test_Результат"),
        "testCaseKey": "TT-T75",
        "scriptResults": [
       	 {"index": 0,
        		  "status":pm.collectionVariables.get("Test_1_Результат"),
       		   "comment":pm.collectionVariables.get("Test_1_Коммент")},
       	 {"index": 1,
        		  "status":pm.collectionVariables.get("Test_2_Результат"),
       		   "comment":pm.collectionVariables.get("Test_2_Коммент")},
      	  {"index": 2,
        		  "status":pm.collectionVariables.get("Test_3_Результат"),
       		   "comment":pm.collectionVariables.get("Test_3_Коммент")}
      ]}])}});

pm.collectionVariables.clear(); // Очищаем переменные коллекции

